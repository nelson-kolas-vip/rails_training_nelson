<!-- app/views/tables/index.html.erb -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
  /* Custom styles for a restaurant management theme */

  .restaurant-card {
    background-color: #ffffff;
    border-radius: 0.75rem; /* More rounded corners */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08); /* Softer shadow */
    padding: 2.5rem; /* More padding */
  }

  .table thead th {
    background-color: #343a40; /* Darker header for tables */
    color: #ffffff;
    font-weight: 600;
    vertical-align: middle;
    padding: 0.8rem 1rem;
    border-bottom: 2px solid #495057;
  }

  .table tbody tr {
    transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out;
  }

  .table tbody tr:hover {
    background-color: #e9ecef; /* Lighter hover effect */
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }

  .table-bordered th, .table-bordered td {
    border-color: #dee2e6; /* Lighter border color for tables */
  }

  /* Status Badges Styling */
  .badge-available {
    background-color: #28a745; /* Green for available */
    color: #ffffff !important;
  }
  .badge-occupied {
    background-color: #dc3545; /* Red for occupied */
    color: #ffffff !important;
  }
  .badge-reserved {
    background-color: #ffc107; /* Yellow/Orange for reserved */
    color: #343a40 !important;
  }
  .badge-cleaning {
    background-color: #007bff; /* Blue for cleaning */
    color: #ffffff !important;
  }

  /* Increased badge size and icon styling */
  .badge {
    font-size: 0.95em; /* Slightly larger font for the badge text */
    padding: 0.4em 0.7em; /* Increased padding for a larger badge */
    transition: all 0.2s ease-in-out;
  }
  .badge:hover {
    transform: scale(1.05);
  }

  .badge i {
    font-size: 1.1em; /* Larger icon size within badge */
    margin-right: 0.3em; /* More space between icon and text */
  }

  /* Restaurant details card styling */
  .restaurant-details-card {
    background-color: #f0f2f5; /* Slightly darker background for details */
    border-radius: 0.5rem;
    padding: 1.5rem;
    margin-bottom: 2rem;
    border: 1px solid #e0e0e0;
  }
  .restaurant-details-card .detail-item {
    display: flex;
    align-items: center;
    margin-bottom: 0.5rem;
    transition: transform 0.2s ease-in-out;
  }
  .restaurant-details-card .detail-item:hover {
    transform: translateX(5px);
  }
  .restaurant-details-card .detail-item i {
    margin-right: 0.75rem;
    color: #6c757d; /* Muted icon color */
    font-size: 1.1em;
  }
  .restaurant-details-card .detail-item strong {
    color: #343a40;
  }

  /* Colorful icons for restaurant details */
  .icon-location { color: #dc3545; }
  .icon-cuisine { color: #ffc107; }
  .icon-rating { color: #28a745; }

  /* Table row coloring based on status */
  .table-row-available {
    background-color: #e6ffe6; /* Very light green */
  }
  .table-row-occupied {
    background-color: #ffe6e6; /* Very light red */
  }
  .table-row-reserved {
    background-color: #fffbe6; /* Very light yellow */
  }
  .table-row-cleaning {
    background-color: #e6f2ff; /* Very light blue */
  }

  /* Pagination Styling */
  .pagination {
    display: flex;
    padding-left: 0;
    list-style: none;
    border-radius: 0.25rem;
  }
  .pagination a, .pagination em {
    position: relative;
    display: block;
    padding: 0.5rem 0.75rem;
    margin-left: -1px;
    line-height: 1.25;
    color: #0d6efd;
    background-color: #fff;
    border: 1px solid #dee2e6;
    text-decoration: none;
    transition: all 0.2s ease-in-out;
  }
  .pagination a:hover {
    z-index: 2;
    color: #0a58ca;
    background-color: #e9ecef;
    border-color: #dee2e6;
  }
  .pagination .page-item.active .page-link {
    z-index: 3;
    color: #fff;
    background-color: #0d6efd;
    border-color: #0d6efd;
  }
</style>

<div class="container mt-5 restaurant-card">
  <h2 class="mb-4 text-center">Tables for <%= @restaurant.name %></h2>

  <% flash.each do |key, value| %>
    <div class="alert alert-<%= key == "notice" ? "success" : "danger" %> alert-dismissible fade show" role="alert">
      <%= value %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% end %>


  <!-- Restaurant Details Card -->
  <div class="restaurant-details-card">
    <p class="lead text-center mb-3"><%= @restaurant.description %></p>
    <div class="row text-center">
      <div class="col-md-4 detail-item">
        <i class="bi bi-geo-alt-fill icon-location"></i> <strong>Location:</strong> <%= @restaurant.location %>
      </div>
      <div class="col-md-4 detail-item">
        <i class="bi bi-egg-fried icon-cuisine"></i> <strong>Cuisine:</strong> <%= @restaurant.cuisine_type %>
      </div>
      <div class="col-md-4 detail-item">
        <i class="bi bi-star-fill icon-rating"></i> <strong>Rating:</strong> <%= @restaurant.rating %> / 5
      </div>
    </div>
  </div>

  <!-- Filter Dropdown -->
  <div class="mb-4">
    <%= form_with url: restaurant_tables_path(@restaurant), method: :get, local: false, class: "row align-items-center g-3" do %>
      <div class="col-md-3 col-sm-6"> <%# Adjusted column size for a smaller filter %>
        <label for="status-select" class="form-label visually-hidden">Filter by Status</label>
        <%# Removed form-select-lg to make it smaller %>
        <%= select_tag :status,
              options_for_select([['All tables', '']] + Table.statuses.keys.map { |s| [s.titleize, s] }, selected: params[:status]),
              class: "form-select",
              id: "status-select",
              onchange: "this.form.submit();" %>
      </div>
    <% end %>
  </div>

  <div class="d-flex justify-content-between align-items-center mb-3">
    <h4 class="mb-0">Manage Tables</h4>
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#newTableModal">
      <i class="bi bi-plus-circle me-1"></i> Add Table
    </button>
  </div>

  <!-- Create Table Modal -->
  <div class="modal fade" id="newTableModal" tabindex="-1" aria-labelledby="newTableModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <%= form_with model: [@restaurant, Table.new], url: restaurant_tables_path(@restaurant), method: :post, local: true do |f| %>
          <div class="modal-header bg-dark text-white">
            <h5 class="modal-title" id="newTableModalLabel"><i class="bi bi-plus-circle"></i> Create New Table</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>

          <div class="modal-body">
            <div class="mb-3">
              <%= f.label :table_number, "Table Number" %>
              <%= f.number_field :table_number, class: "form-control", required: true %>
            </div>

            <div class="mb-3">
              <%= f.label :seating_capacity, "Seating Capacity" %>
              <%= f.number_field :seating_capacity, class: "form-control", required: true %>
            </div>

            <div class="mb-3">
              <%= f.label :status, "Status" %>
              <%= f.select :status, Table.statuses.keys.map { |s| [s.titleize, s] }, {}, class: "form-select" %>
            </div>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <%= f.submit "Create Table", class: "btn btn-dark" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Tables Listing -->
  
  <!-- Search input -->
  <div class="mb-3 search-input-container">
    <%= form_with url: restaurant_tables_path(@restaurant), method: :get, local: false, data: {turbo_frame: "tables_list"} do %>
      <div class="input-group">
        <span class="input-group-text"><i class="bi bi-search"></i></span>
        <%= text_field_tag :search, params[:search], placeholder: "Search by Table Number or Seats...", class: "form-control" %>
      </div>
    <% end %>
  </div>

  <!-- Turbo Frame for dynamic table update -->
  <%= turbo_frame_tag "tables_list" do %>
    <div class="table-responsive">
      <table class="table table-bordered table-hover table-striped">
        <thead>
          <tr>
            <th><%= link_to "ID", restaurant_tables_path(@restaurant, status: params[:status], sort: 'id', search: params[:search]), data: { turbo_frame: "tables_list" }, class: "text-white text-decoration-none" %></th>
            <th><%= link_to "Table Number", restaurant_tables_path(@restaurant, status: params[:status], sort: 'table_number', search: params[:search]), data: { turbo_frame: "tables_list" }, class: "text-white text-decoration-none" %></th>
            <th><%= link_to "Seats", restaurant_tables_path(@restaurant, status: params[:status], sort: 'seating_capacity', search: params[:search]), data: { turbo_frame: "tables_list" }, class: "text-white text-decoration-none" %></th>
            <th><%= link_to "Status", restaurant_tables_path(@restaurant, status: params[:status], sort: 'status', search: params[:search]), data: { turbo_frame: "tables_list" }, class: "text-white text-decoration-none" %></th>
          </tr>
        </thead>
        <tbody>
          <% if @tables.any? %>
            <% @tables.each do |table| %>
              <% row_class = "table-row-#{table.status}" %>
              <tr class="<%= row_class %>">
                <td><%= table.id %></td>
                <td><%= table.table_number %></td>
                <td><%= table.seating_capacity %></td>
                <td>
                  <% status_icon_class = '' %>
                  <% status_bg_class = '' %>
                  <% case table.status
                     when 'available'
                       status_icon_class = 'bi-check-circle-fill'
                       status_bg_class = 'badge-available'
                     when 'occupied'
                       status_icon_class = 'bi-person-fill-slash'
                       status_bg_class = 'badge-occupied'
                     when 'reserved'
                       status_icon_class = 'bi-bookmark-fill'
                       status_bg_class = 'badge-reserved'
                     when 'cleaning'
                       status_icon_class = 'bi-brush-fill'
                       status_bg_class = 'badge-cleaning'
                     else
                       status_icon_class = 'bi-question-circle-fill'
                       status_bg_class = 'bg-secondary'
                     end %>
                  <span class="badge <%= status_bg_class %>">
                    <i class="bi <%= status_icon_class %>"></i>
                    <%= table.status.titleize %>
                  </span>
                </td>
              </tr>
            <% end %>
          <% else %>
            <tr>
              <td colspan="4" class="text-center text-muted">No Tables found</td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4">
      <%= will_paginate @tables, params: { search: params[:search] } %>
    </div>
  <% end %>
</div>

<script>
  // Initialize tooltips
  document.addEventListener('DOMContentLoaded', function () {
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl)
    tooltipTriggerList.map(tooltipList);
  });
</script>
